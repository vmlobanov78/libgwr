//      ************************************************************************
//
//      kconfig-gen-log.h
//
//      ------------------------------------------------------------------------
//
//      part of libkconfig
//
//      Copyright (C) 2011-2013 Guillaume Wardavoir
//
//      ------------------------------------------------------------------------
//
//      This program is free software  you can redistribute it and/or modify
//      it under the terms of the GNU General Public License as published by
//      the Free Software Foundation  either version 2 of the License, or
//      (at your option) any later version.
//
//      This program is distributed in the hope that it will be useful,
//      but WITHOUT ANY WARRANTY  without even the implied warranty of
//      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//      GNU General Public License for more details.
//
//      You should have received a copy of the GNU General Public License
//      along with this program  if not, write to the Free Software
//      Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301,
//      USA.
//
//      ------------------------------------------------------------------------
//
//     Class   :
//
//     Parent  : None
//
//     Purpose : Defs for all logs in libkconfig. From this file will be
//               generated :
//                  - log macros
//                  - code for the log_settings widget
//
//     *************************************************************************

(namespaces-prefix)                         libkconfig::log
(channels-prefix)                           LIBKCONFIG_LOG_CHANNEL_
(file.h)                                    kconfig-log-generated-themes.hi
(file.cc)                                   kconfig-log-generated-themes.cci
(global-logger-pointer)                     LIBKCONFIG_LOGGER

(+parsing)

                (macro-prefix)              PARSING

                (pref-lst-0)                files
                (pref-fmt-0)                "%s"
                (pref-arg-0)                libkconfig::parsing::Kconfig_file_spacer()->get()

                std                         STD             PARSING_MSG     INF:Grn  WNG:Ora  ERR:Red
                files                       FILES           PARSING_FILES   INF:Grn  WNG:Ora  ERR:Red

(-parsing)

(+flex)
{
    (+log)
    {
                (macro-prefix)              FLEX

                //  tests
                //std1                      STD1            PARSING_FLEX    INF:Grn
                //std2                      STD2            PARSING_FLEX    INF:Grn,Std
                //std3                      STD3            PARSING_FLEX    INF:Grn,Std:Ita
                //std4                      STD4            PARSING_FLEX    INF:Grn:Ita
                //std5                      STD5            PARSING_FLEX    INF:Grn,Std:Ita,Bld
                //std6                      STD6            PARSING_FLEX    INF:Grn:Ita,Bld

                std                         STD             PARSING_FLEX    INF:Grn  WNG:Ora  ERR:Red
                help                        HELP            PARSING_FLEX    INF:Grn           ERR:Red
                string                      STR             PARSING_FLEX    INF:Grn
                exp                         EXP             PARSING_FLEX    INF:Grn  WNG:Ora  ERR:Red
    }
    (-log)
}
(-flex)

(+parser)
{

                (macro-prefix)              PARSER_BISON

                (pref-lst-0)                std
                (pref-fmt-0)                "%s"
                (pref-arg-0)                parser::P_container_spacer()->get()

                std                         STD             PARSING_BISON   INF:Grn         WNG:Ora  ERR:Red  TKI:Grey6 TKW:Blu1 TKE:Blu
                env                         ENV             PARSING_BISON   INF:Grn         WNG:Ora  ERR:Red
                src                         SRC             PARSING_BISON   INF:Grn,Greyd   WNG:Ora  ERR:Red

    (+container)
    {
                (macro-prefix)              PARSER_CON

                (pref-lst-0)                declaration
                (pref-fmt-0)                "%s"
                (pref-arg-0)                parser::P_container_spacer()->get()

                declaration                 DECL            PARSING_BISON   INF:Grn  WNG:Ora  ERR:Red

        (+properties)

                (macro-prefix)              PARSER_CON

                (pref-lst-0)                help type defval typdv range prompt depends select env helptext depcard depstr opt_optional
                (pref-fmt-0)                "%s"
                (pref-arg-0)                parser::P_container_spacer()->get()

                help                        HELP            PARSING_BISON   INF:Grn  WNG:Ora  ERR:Red
                type                        TYPE            PARSING_BISON   INF:Grn  WNG:Ora  ERR:Red
                defval                      DEFVAL          PARSING_BISON   INF:Grn  WNG:Ora  ERR:Red
                typdv                       TYPDV           PARSING_BISON   INF:Grn  WNG:Ora  ERR:Red
                range                       RANGE           PARSING_BISON   INF:Grn  WNG:Ora  ERR:Red
                prompt                      PROMPT          PARSING_BISON   INF:Grn  WNG:Ora  ERR:Red
                depends                     DEPENDS         PARSING_BISON   INF:Grn  WNG:Ora  ERR:Red
                select                      SELECT          PARSING_BISON   INF:Grn  WNG:Ora  ERR:Red
                env                         ENV             PARSING_BISON   INF:Grn  WNG:Ora  ERR:Red

                //  helptext display the help text
                helptext                    HELPTEXT        PARSING_BISON   INF:Grn
                //  depcard display the number of dependancies of the current item
                depcard                     DEPCARD         PARSING_BISON   INF:Grn
                //  depstr display the current dependancy string
                depstr                      DEPSTR          PARSING_BISON   INF:Grn

                opt_optional                OPT_OPTIONAL    PARSING_BISON   INF:Grn  WNG:Ora  ERR:Red

            (+depends)

                (macro-prefix)              PARSER_CON

                estr                        EXP_STR         PARSING_BISON   INF:Grn  WNG:Ora  ERR:Red
                ecode                       EXP_CODE        PARSING_BISON   INF:Grn  WNG:Ora  ERR:Red

            (-depends)

        (-properties)

    }
    (-container)

    (+symbol)
    {
                (macro-prefix)              PARSER_SYM

                (pref-lst-0)                declaration
                (pref-fmt-0)                "%s"
                (pref-arg-0)                parser::P_container_spacer()->get()

                declaration                 DECL            PARSING_BISON   INF:Grn  WNG:Ora  ERR:Red

        (+properties)

                (macro-prefix)              PARSER_SYM

                (pref-lst-0)                help type defval typdv range prompt depends select env helptext depcard depstr
                (pref-fmt-0)                "%s"
                (pref-arg-0)                parser::P_container_spacer()->get()

            (+depends)

                (macro-prefix)              PARSER_SYM

                estr                        DEP_STR         PARSING_BISON    INF:Grn  WNG:Ora  ERR:Red
                ecode                       DEP_CODE        PARSING_BISON    INF:Grn  WNG:Ora  ERR:Red

            (-depends)

                help                        HELP            PARSING_BISON   INF:Grn  WNG:Ora  ERR:Red
                type                        TYPE            PARSING_BISON   INF:Grn  WNG:Ora  ERR:Red
                defval                      DEFVAL          PARSING_BISON   INF:Grn  WNG:Ora  ERR:Red
                typdv                       TYPDV           PARSING_BISON   INF:Grn  WNG:Ora  ERR:Red
                range                       RANGE           PARSING_BISON   INF:Grn  WNG:Ora  ERR:Red
                prompt                      PROMPT          PARSING_BISON   INF:Grn  WNG:Ora  ERR:Red
                depends                     DEPENDS         PARSING_BISON   INF:Grn  WNG:Ora  ERR:Red
                select                      SELECT          PARSING_BISON   INF:Grn  WNG:Ora  ERR:Red
                env                         ENV             PARSING_BISON   INF:Grn  WNG:Ora  ERR:Red
                //  helptext display the help text string
                helptext                    HELPTEXT        PARSING_BISON   INF:Grn
                //  depcard display the number of dependancies of the current item
                depcard                     DEPCARD         PARSING_BISON   INF:Grn
                //  depstr display the current dependancy string
                depstr                      DEPSTR          PARSING_BISON   INF:Grn

        (-properties)

    }
    (-symbol)

    (+exp)
    {
                (macro-prefix)              PARSER_EXP

                (pref-lst-0)                std atom str
                (pref-fmt-0)                "%s"
                (pref-arg-0)                parser::P_container_spacer()->get()

                std                         STD             PARSING_BISON   INF:Grn  WNG:Ora  ERR:Red
                atom                        ATOM            PARSING_BISON   INF:Grn  WNG:Ora  ERR:Red
                str                         STR             PARSING_BISON   INF:Grn  WNG:Ora  ERR:Red
                //code                      CODE            PARSING_BISON   INF:Grn  WNG:Ora  ERR:Red

    }
    (-exp)
}
(-parser)

(+message)
{
                (pref-lst-0)                item
                (pref-fmt-0)                "[%-70s] [%6i @ %-40s]:"
                (pref-arg-0)                ITEM->cname(), ITEM->kconfig_file_line(), libkconfig::object::G_kernel_get()->kconfig_file( ITEM->kconfig_file_index() )

                item                @ITEM   MSG_ITM             MSG             INF:Grn  WNG:Ora  ERR:Red
}
(-message)

(+object)
{
                (pref-lst-0)                item
                (pref-fmt-0)                "%-9s::%-32s:[%-50s]:%s"
                (pref-arg-0)                s_classname ,s_methodname, cname() ,libkconfig::object::G_log_spacer_w()->get()

                (pref-lst-1)                 obj
                (pref-fmt-1)                 "%-9s::%-32s:%s"
                (pref-arg-1)                 s_classname ,s_methodname ,libkconfig::object::G_log_spacer_w()->get()

                lkc                         LKC             OBJECT          INF:Grn  WNG:Ora  ERR:Red  TKI:Grey6 TKW:Blu1 TKE:Blu
                obj                         OBJ             OBJECT          INF:Grn  WNG:Ora  ERR:Red  TKI:Grey6 TKW:Blu1 TKE:Blu
                item                        ITM             OBJECT          INF:Grn  WNG:Ora  ERR:Red  TKI:Grey6 TKW:Blu1 TKE:Blu

                wng_str2int                 WSICONV         OBJECT          INF:Grn  WNG:Ora  ERR:Red

    (+kernel)
    {
        (+init)
        {
                (macro-prefix)              LKC_KINIT

                check_unvalued_choices      CUC             INIT            INF:Grn  WNG:Ora  ERR:Red
                check_defval_type           CDT             INIT            INF:Grn  WNG:Ora  ERR:Red
                specalize_input_prompts     SIP             INIT            INF:Grn  WNG:Ora  ERR:Red
                reorder                     REO             INIT            INF:Grn  WNG:Ora  ERR:Red
                flags                       FLAGS           INIT            INF:Grn  WNG:Ora  ERR:Red
        }
        (-init)
    }
    (-kernel)
}
(-object)

(+exp)
{
    (+eval)
    {
                std                         EXPEV           EXP             INF:Grn  WNG:Ora  ERR:Red  TKI:Grey6 TKW:Blu1 TKE:Blu
                //stack           STACK           EXP             INF:Grn  WNG:Ora  ERR:Red
    }
    (-eval)
}
(-exp)






















