/*
    *****************************************************************************
    *                                                                           *
    *   libgwrc-array-data-multi-core.cci                                       *
    *                                                                           *
    *   --------------------------------------------------------------------    *
    *                                                                           *
    *   Part of libwgwr                                                         *
    *                                                                           *
    *   Copyright (C) 2011-2014 Guillaume Wardavoir                             *
    *                                                                           *
    *   --------------------------------------------------------------------    *
    *                                                                           *
    *   This program is free software; you can redistribute it and/or modify    *
    *   it under the terms of the GNU General Public License as published by    *
    *   the Free Software Foundation; either version 2 of the License, or       *
    *   (at your option) any later version.                                     *
    *                                                                           *
    *   This program is distributed in the hope that it will be useful,         *
    *   but WITHOUT ANY WARRANTY; without even the implied warranty of          *
    *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           *
    *   GNU General Public License for more details.                            *
    *                                                                           *
    *   You should have received a copy of the GNU General Public License       *
    *   along with this program; if not, write to the Free Software             *
    *   Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301,   *
    *   USA.                                                                    *
    *                                                                           *
    *   --------------------------------------------------------------------    *
    *                                                                           *
    *   Purpose :   Array containing datas of any sizes.                        *
    *                                                                           *
    *****************************************************************************
*/

//  ----------------------------------------------------------------------------
//  gwr_array_data_multi_add_data_get_ADMBlock()
//  ----------------------------------------------------------------------------
GwrCADBlock24*
Gwr_array_data_multi_add_data_get_ADMBlock(
        GwrCArrayDataMulti          *   _adm        ,
        guint32                         _data_len   )
{
    GwrCADBlock24   *   dbk24_candidate;
    GwrCADBlock24       dbk24_new;
    //  ........................................................................
    //  choose block to add data
    dbk24_candidate = gwr_array_equal_get_data(                                 //  get last block in use
                        _adm->d_blocks                  ,
                        _adm->d_blocks->a_data_card - 1 );                      //  _OPTIM_01_

    //  block full ? create another
    if ( gwr_array_dbk24_available_bytes(dbk24_candidate) < _data_len )
    {
        gwr_array_dbk24_alloc( &dbk24_new, _adm->a_blocks_size  );
        gwr_array_equal_add_data( _adm->d_blocks, &dbk24_new );

        dbk24_candidate = gwr_array_equal_get_data(                             //  get last block in use = admb_new
                            _adm->d_blocks                  ,
                            _adm->d_blocks->a_data_card - 1 );
    }

    return dbk24_candidate;
}
//  ----------------------------------------------------------------------------
//  gwr_array_data_multi_add_data()
//  ----------------------------------------------------------------------------
void
gwr_array_data_multi_add_data(
        GwrCArrayDataMulti          *   _adm        ,
        gpointer                        _data       ,
        guint16                         _data_len   )
{
    GwrCADBlock24       *   dbk24_candidate;
    GwrCADMDataInfo         admdi_new;
    //  ........................................................................
    //  choose block to add data
    dbk24_candidate =   Gwr_array_data_multi_add_data_get_ADMBlock(_adm, _data_len);
    //  ........................................................................
    //  create new data info
    gwr_array_data_multi_data_info_set(
        &admdi_new                                          ,
        _adm->d_blocks->a_data_card - 1                     ,
        gwr_array_dbk24_used_bytes(dbk24_candidate)         ,                   //  used bytes = offset
        _data_len                                           );

    gwr_array_equal_add_data( _adm->d_infos, &admdi_new );
    //  ........................................................................
    //  add data to the block
    gwr_array_dbk24_add( dbk24_candidate, _data, _data_len );
    //  ........................................................................
    //  update infos
    _adm->a_data_size   =   _adm->a_data_size   +   _data_len;
}
//  ----------------------------------------------------------------------------
//  gwr_array_data_multi_add_data_and_extra_data_index()
//  ----------------------------------------------------------------------------
void
gwr_array_data_multi_add_data_and_extra_data_index(
        GwrCArrayDataMulti      *       _adm                ,
        gpointer                        _data               ,
        guint16                         _data_len           ,
        guint32                         _extra_data_index   ,
        guint8                  *       _xdi_len            )
{
    GwrCADBlock24       *   dbk24_candidate;
    GwrCADMDataInfo         admdi_new;
    //  ........................................................................
    dbk24_candidate =   Gwr_array_data_multi_add_data_get_ADMBlock(_adm, _data_len + sizeof(gpointer));
    //  ........................................................................
    //  create new data info
    gwr_array_data_multi_data_info_set(
        &admdi_new                                          ,
        _adm->d_blocks->a_data_card - 1                     ,
        gwr_array_dbk24_available_bytes(dbk24_candidate)    ,                   //  used bytes = offset
        _data_len                                           );

    gwr_array_equal_add_data( _adm->d_infos, &admdi_new );
    //  ........................................................................
    //  add data to the block
    gwr_array_dbk24_add_with_extra_data_index( dbk24_candidate, _data, _data_len , _extra_data_index, _xdi_len );
    //  ........................................................................
    //  update infos
    _adm->a_data_size   =   _adm->a_data_size   +   _data_len;
}
//  ----------------------------------------------------------------------------
//  gwr_array_data_multi_get_data()
//  ----------------------------------------------------------------------------
void
gwr_array_data_multi_get_data(
        GwrCArrayDataMulti      *       _adm            ,
        guint32                         _data_index     ,
        GwrCADMData             *       _data           )
{
    GwrCADMDataInfo         *   di      =   NULL;
    GwrCADBlock24           *   dbk24   =   NULL;
    //  ........................................................................
    di = gwr_array_equal_get_data( _adm->d_infos, _data_index );

    _data->a_size   =   di->a_len;

    dbk24 = gwr_array_equal_get_data( _adm->d_blocks, di->a_block_index );

    _data->a_mem    =   dbk24->d_mem    +   di->a_offset;
}
//  ----------------------------------------------------------------------------
//  gwr_array_data_multi_get_data_and_gpointer()
//  ----------------------------------------------------------------------------
gboolean
gwr_array_data_multi_get_data_and_gpointer(
        GwrCArrayDataMulti      *       _adm                ,
        guint32                         _data_index         ,
        GwrCADMData             *       _data               ,
        gpointer                *       _gpointer           )
{
    /*
    GwrCADMDataInfo         *   di      =   NULL;
    GwrCADBlock24           *   dbk24   =   NULL;
    //  ........................................................................
    di = gwr_array_equal_get_data( _adm->d_infos, _data_index );

    _data->a_size   =   di->a_len;

    dbk24 = gwr_array_equal_simple_get( _adm->d_blocks, di->a_block_index );

    _data->a_mem    =   dbk24->d_mem    +   di->a_offset;
    //  ........................................................................
    //  and now the gpointer
    *(_gpointer)    =   *( (gpointer*)((gchar*)_data->a_mem + _data->a_size) );

    return TRUE;
    */
    return TRUE;
}
